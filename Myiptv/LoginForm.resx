<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>